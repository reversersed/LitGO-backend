// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.3
// source: author_service.proto

package authors_pb

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

// GenreClient is the client API for Genre service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GenreClient interface {
}

type genreClient struct {
	cc grpc.ClientConnInterface
}

func NewGenreClient(cc grpc.ClientConnInterface) GenreClient {
	return &genreClient{cc}
}

// GenreServer is the server API for Genre service.
// All implementations must embed UnimplementedGenreServer
// for forward compatibility
type GenreServer interface {
	mustEmbedUnimplementedGenreServer()
}

// UnimplementedGenreServer must be embedded to have forward compatible implementations.
type UnimplementedGenreServer struct {
}

func (UnimplementedGenreServer) mustEmbedUnimplementedGenreServer() {}

// UnsafeGenreServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GenreServer will
// result in compilation errors.
type UnsafeGenreServer interface {
	mustEmbedUnimplementedGenreServer()
}

func RegisterGenreServer(s grpc.ServiceRegistrar, srv GenreServer) {
	s.RegisterService(&Genre_ServiceDesc, srv)
}

// Genre_ServiceDesc is the grpc.ServiceDesc for Genre service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Genre_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "authors.Genre",
	HandlerType: (*GenreServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "author_service.proto",
}
