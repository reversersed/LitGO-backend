basePath: /api/v1/
consumes:
- application/json
definitions:
  handlers.UserAuthenticate.UserResponse:
    properties:
      login:
        example: admin
        type: string
      roles:
        example:
        - user
        items:
          type: string
        type: array
    type: object
  handlers.UserLogin.UserResponse:
    properties:
      login:
        example: admin
        type: string
      roles:
        example:
        - user
        items:
          type: string
        type: array
    type: object
  handlers.UserRegister.UserResponse:
    properties:
      login:
        example: admin
        type: string
      roles:
        example:
        - user
        items:
          type: string
        type: array
    type: object
  middleware.CustomError:
    description: General error object. This structure always returns when error occured
    properties:
      code:
        description: Internal gRPC error code (e.g. 3)
        example: 3
        type: integer
      details:
        description: Error details. Check 'ErrorDetail' structure for more information
        items: {}
        type: array
      message:
        description: Error message. Can be shown to users
        example: Bad token provided
        type: string
      type:
        description: Error code in string (e.g. InvalidArgument)
        example: InvalidArgument
        type: string
    type: object
  shared_pb.ErrorDetail:
    description: Error detail contains information about error
    properties:
      actualvalue:
        description: 'Actual value of field that causes the error. Note: ''password''
          field will be hidden'
        example: token
        type: string
      description:
        description: Error description. Only development purposes, do not show users
        example: Field must be a jwt token
        type: string
      field:
        description: Field that error occured on
        example: Token
        type: string
      struct:
        description: Structure that contains field
        example: users_pb.TokenRequest
        type: string
      tag:
        description: Failed validation tag
        example: jwt
        type: string
    type: object
  users_pb.LoginRequest:
    properties:
      login:
        description: Can be presented as login or email
        example: admin
        type: string
      password:
        example: admin
        type: string
    required:
    - login
    - password
    type: object
  users_pb.RegistrationRequest:
    properties:
      email:
        type: string
      login:
        maxLength: 16
        minLength: 4
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      password_repeat:
        type: string
    required:
    - email
    - login
    - password
    - password_repeat
    type: object
  users_pb.UserModel:
    properties:
      email:
        type: string
      id:
        type: string
      login:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
host: localhost:9000
info:
  contact: {}
  title: API
  version: "1.0"
paths:
  /users:
    get:
      description: |-
        params goes in specific order: id -> login -> email
        first found user will be returned. If no user found, there'll be an error with details
      parameters:
      - description: User Id
        in: query
        name: id
        type: string
      - description: User login
        in: query
        name: login
        type: string
      - description: User email
        format: email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User DTO model
          schema:
            $ref: '#/definitions/users_pb.UserModel'
        "400":
          description: Request's field was not in a correct format
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
        "503":
          description: Service does not responding (maybe crush)
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
      summary: Find user by credentials
      tags:
      - users
  /users/auth:
    get:
      description: check if current user has legit token
      produces:
      - application/json
      responses:
        "200":
          description: User successfully authorized
          schema:
            $ref: '#/definitions/handlers.UserAuthenticate.UserResponse'
        "401":
          description: User does not authorized
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
        "404":
          description: User does not exists in database
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
        "503":
          description: Service does not responding (maybe crush)
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Authenticates user
      tags:
      - users
  /users/login:
    post:
      description: log in user with provided login and password
      parameters:
      - description: Login field can be presented as login and email as well
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users_pb.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully authorized
          schema:
            $ref: '#/definitions/handlers.UserLogin.UserResponse'
        "400":
          description: Invalid request data
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
        "503":
          description: Service does not responding (maybe crush)
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
      summary: Authorizes user
      tags:
      - users
  /users/signin:
    post:
      description: creates new user and authorizes it
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users_pb.RegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered and authorized
          schema:
            $ref: '#/definitions/handlers.UserRegister.UserResponse'
        "400":
          description: Invalid request data
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
        "500":
          description: Some internal error occured
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
        "503":
          description: Service does not responding (maybe crush)
          schema:
            allOf:
            - $ref: '#/definitions/middleware.CustomError'
            - properties:
                details:
                  items:
                    $ref: '#/definitions/shared_pb.ErrorDetail'
                  type: array
              type: object
      summary: Registration
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: Cookie
    name: Authorization
    type: apiKey
swagger: "2.0"
