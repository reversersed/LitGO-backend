{
    "consumes": [
        "application/json",
        "application/x-www-form-urlencoded"
    ],
    "swagger": "2.0",
    "info": {
        "title": "API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/api/v1/",
    "paths": {
        "/authors": {
            "get": {
                "description": "there can be multiple search parameters, id or translit, or both\nexample: ?id=1\u0026id=2\u0026translit=author-21\u0026id=3\u0026translit=author-756342",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Find authors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author Id, must be a primitive id hex",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Translit author name",
                        "name": "translit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/authors_pb.AuthorModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Field was not in a correct format",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Authors not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Some internal error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authors/search": {
            "get": {
                "description": "find authors by provided phares, keys or names",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Find authors by keywords",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query with keywords",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit authors to display. default = 5 if not specified, min = 1, max = 50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number to find, must be greater or equal than 0",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/authors_pb.AuthorModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Query was empty",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Authors not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Some internal error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "description": "get one book by exact id or translit name\nquery can be primitive id (hex) or translit name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query request",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book",
                        "schema": {
                            "$ref": "#/definitions/books_pb.BookModel"
                        }
                    },
                    "400": {
                        "description": "Invalid body",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Some internal error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates new book by request\nRequest must be multipart/form data only",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create new book",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "authors primitive id, at least one required",
                        "name": "Authors",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 1024,
                        "minLength": 16,
                        "type": "string",
                        "description": "description, required, 16 \u003c= length \u003c= 1024",
                        "name": "Description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "genre primitive id, required",
                        "name": "Genre",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 64,
                        "minLength": 4,
                        "type": "string",
                        "description": "book name, required, 4 \u003c= length \u003c= 64",
                        "name": "Name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "Price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "epub format book file",
                        "name": "Book",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "book cover picture",
                        "name": "Cover",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/books_pb.BookModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong request received",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Authors or genre not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Some internal error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/books/search": {
            "get": {
                "description": "find books by provided phares, keys or names",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Find books by keywords",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query with keywords",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit books to display. default = 5 if not specified, min = 1, max = 50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number to find, must be greater or equal than 0",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Books",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/books_pb.BookModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Query was empty",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Books not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Some internal error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/genres": {
            "get": {
                "description": "Searches category or genre based on id or translit name\nQuery can be: category id, category translit name, genre id or genre translit name\nIf category found, it returns whole category with nested genre. Otherwise it returns a single genre",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Get category or genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query to find. can be hex id or translit name",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response body. Only one field will be presented",
                        "schema": {
                            "$ref": "#/definitions/genre.GetOneOfGenre.HandleResponse"
                        }
                    },
                    "400": {
                        "description": "Received wrong query",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Category or genre not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal error occurred",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/genres/all": {
            "get": {
                "description": "Fetches all categories (with genres included)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Get all genres",
                "responses": {
                    "200": {
                        "description": "Genres fetched successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/genres_pb.CategoryModel"
                            }
                        }
                    },
                    "404": {
                        "description": "There's no genres in database",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal error occurred",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/genres/tree": {
            "get": {
                "description": "Searches category tree based on category or genre id or translate name\nQuery can be: category id, category translit name, genre id or genre translit name\nIf genre id or name matches, it returns whole category that contains that genre",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Get category tree",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query to find. can be hex id or translit name",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category",
                        "schema": {
                            "$ref": "#/definitions/genres_pb.CategoryModel"
                        }
                    },
                    "400": {
                        "description": "Received wrong query",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal error occurred",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/reviews/book/{id}": {
            "get": {
                "description": "Find's all book's reviews with page and pagesize arguments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get book's reviews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID or translit name",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number, must be greater or equal than 0, optional parameter",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, default 1, must be greater or equal than 1",
                        "name": "pagesize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reviews_pb.ReviewModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No reviews found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal error occurred",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Find's all book's reviews with page and pagesize arguments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get book's reviews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID or translit name",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reviews_pb.CreateBookReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created review",
                        "schema": {
                            "$ref": "#/definitions/reviews_pb.ReviewModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "User not authorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Book or user not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal error occurred",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "params goes in specific order: id -\u003e login -\u003e email\nfirst found user will be returned. If no user found, there'll be an error with details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Find user by credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User login",
                        "name": "login",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "User email",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User DTO model",
                        "schema": {
                            "$ref": "#/definitions/users_pb.UserModel"
                        }
                    },
                    "400": {
                        "description": "Request's field was not in a correct format",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/auth": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "check if current user has legit token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Authenticates user",
                "responses": {
                    "200": {
                        "description": "User successfully authorized",
                        "schema": {
                            "$ref": "#/definitions/user.UserAuthenticate.UserResponse"
                        }
                    },
                    "401": {
                        "description": "User does not authorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User does not exists in database",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "log in user with provided login and password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Authorizes user",
                "parameters": [
                    {
                        "description": "Login field can be presented as login and email as well",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users_pb.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully authorized",
                        "schema": {
                            "$ref": "#/definitions/user.UserLogin.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes user session if one exists",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout user",
                "responses": {
                    "204": {
                        "description": "User logged out"
                    },
                    "401": {
                        "description": "User not authorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Some internal error occurred",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/signin": {
            "post": {
                "description": "creates new user and authorizes it",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Registration",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users_pb.RegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered and authorized",
                        "schema": {
                            "$ref": "#/definitions/user.UserRegister.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Data confict (some values already taken)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Some internal error occurred",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service does not responding (maybe crush)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.CustomError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shared_pb.ErrorDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authors_pb.AuthorModel": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profilepicture": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "translitname": {
                    "type": "string"
                }
            }
        },
        "books_pb.AuthorModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profilepicture": {
                    "type": "string"
                },
                "translitname": {
                    "type": "string"
                }
            }
        },
        "books_pb.BookModel": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/books_pb.AuthorModel"
                    }
                },
                "category": {
                    "$ref": "#/definitions/books_pb.CategoryModel"
                },
                "description": {
                    "type": "string"
                },
                "filepath": {
                    "type": "string"
                },
                "genre": {
                    "$ref": "#/definitions/books_pb.GenreModel"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "reviews": {
                    "type": "integer"
                },
                "translitname": {
                    "type": "string"
                }
            }
        },
        "books_pb.CategoryModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "translitname": {
                    "type": "string"
                }
            }
        },
        "books_pb.GenreModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "translitname": {
                    "type": "string"
                }
            }
        },
        "genre.GetOneOfGenre.HandleResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/genres_pb.CategoryModel"
                },
                "genre": {
                    "$ref": "#/definitions/genres_pb.GenreModel"
                }
            }
        },
        "genres_pb.CategoryModel": {
            "type": "object",
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genres_pb.GenreModel"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "translitName": {
                    "type": "string"
                }
            }
        },
        "genres_pb.GenreModel": {
            "type": "object",
            "properties": {
                "bookCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "translitName": {
                    "type": "string"
                }
            }
        },
        "middleware.CustomError": {
            "description": "General error object. This structure always returns when error occurred",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Internal gRPC error code (e.g. 3)",
                    "type": "integer",
                    "example": 3
                },
                "details": {
                    "description": "Error details. Check 'ErrorDetail' structure for more information",
                    "type": "array",
                    "items": {}
                },
                "message": {
                    "description": "Error message. Can be shown to users",
                    "type": "string",
                    "example": "Bad token provided"
                },
                "type": {
                    "description": "Error code in string (e.g. InvalidArgument)",
                    "type": "string",
                    "example": "InvalidArgument"
                }
            }
        },
        "reviews_pb.CreateBookReviewRequest": {
            "type": "object",
            "required": [
                "modelId",
                "rating",
                "text"
            ],
            "properties": {
                "modelId": {
                    "type": "string"
                },
                "rating": {
                    "type": "number",
                    "maximum": 5,
                    "minimum": 0
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "reviews_pb.ReviewModel": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "creator": {
                    "$ref": "#/definitions/reviews_pb.UserModel"
                },
                "downvotes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "upvotes": {
                    "type": "integer"
                },
                "userAction": {
                    "$ref": "#/definitions/reviews_pb.UserActionEnum"
                }
            }
        },
        "reviews_pb.UserActionEnum": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "UserActionEnum_noAction",
                "UserActionEnum_like",
                "UserActionEnum_dislike"
            ]
        },
        "reviews_pb.UserModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "shared_pb.ErrorDetail": {
            "description": "Error detail contains information about error",
            "type": "object",
            "properties": {
                "actualvalue": {
                    "description": "Actual value of field that causes the error. Note: 'password' field will be hidden",
                    "type": "string",
                    "example": "token"
                },
                "description": {
                    "description": "Error description. Only development purposes, do not show users",
                    "type": "string",
                    "example": "Field must be a jwt token"
                },
                "field": {
                    "description": "Field that error occured on",
                    "type": "string",
                    "example": "Token"
                },
                "struct": {
                    "description": "Structure that contains field",
                    "type": "string",
                    "example": "users_pb.TokenRequest"
                },
                "tag": {
                    "description": "Failed validation tag",
                    "type": "string",
                    "example": "jwt"
                },
                "tagValue": {
                    "description": "Valitation tag value",
                    "type": "string",
                    "example": "5"
                }
            }
        },
        "user.UserAuthenticate.UserResponse": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "admin"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "user"
                    ]
                }
            }
        },
        "user.UserLogin.UserResponse": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "admin"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "user"
                    ]
                }
            }
        },
        "user.UserRegister.UserResponse": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "admin"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "user"
                    ]
                }
            }
        },
        "users_pb.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "description": "Can be presented as login or email",
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "example": "admin"
                },
                "rememberMe": {
                    "type": "boolean"
                }
            }
        },
        "users_pb.RegistrationRequest": {
            "type": "object",
            "required": [
                "email",
                "login",
                "password",
                "password_repeat"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 4
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "password_repeat": {
                    "type": "string"
                },
                "rememberMe": {
                    "type": "boolean"
                }
            }
        },
        "users_pb.UserModel": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "Cookie"
        }
    }
}